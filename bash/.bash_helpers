# add me by adding into ~/.bashrc ot ~/.bash_profile lines below
# if [ -f ~/.bash_helpers ]; then
#   . ~/.bash_helpers
# fi

# to disable homebrew update anytime when installing some package
export HOMEBREW_NO_AUTO_UPDATE=1
# custom prompt line color
export PS1="\[\033[01;43m\]\w\[\033[00m\] \$ "
# don't print deprecation warnings on new MacOS
export BASH_SILENCE_DEPRECATION_WARNING=1

# convert timestamp to human-readable date
function ts2date() {
  python -c "from datetime import datetime; print(datetime.fromtimestamp(${1}))"
}

# get timestamp and date after N-time
# 1S - 1 second
# 1M - 1 minute
# 1d - 1 day
# etc
function dateafter() {
  echo $(date -v+${1} +"%s")" "is" "$(date -v+${1} +"%Y-%m-%d %H:%M:%S")
}

# beautify SQL query with python (run pip install sqlparse first)
function beautifysql() {
  if [ -z "$1" ]; then
    echo "Usage: beautifysql [sql_command or sql_file_path.sql]";
  else
    echo -e "import sqlparse\nm = None\nif \"${1}\".lower().endswith('.sql'):\n  m = open(\"${1}\",'r').read()\nif m is None:\n  m = \"${1}\"\nprint(sqlparse.format(m, reindent=True, keyword_case='upper'))" | python
  fi
}

# port forwarding to localhost (using SSH tunnel)
function pfwd() {
  if [ -z "${1}" -o -z "${2}" -o -z "${3}" ]
  then
    echo 'Usage pfwd from_ip from_port to_port'
  else
    ssh -N -L localhost:${3}:${1}:${2} idcf
  fi
}

# weather forecast
function tenki() {
  if [ -z "$1" ]; then
    place=tokyo
  else
    place=${1}
  fi
  curl "wttr.in/${place}"
}

# to access hosts file faster
alias hosts='sudo nano /etc/hosts'

# run python local webserver
alias web='python3 -m http.server --cgi 8888'

# get global IP
alias gip='curl checkip.amazonaws.com'

# get docker networks
alias d_net='for d in $(docker network ls -f driver=bridge -q); do docker network inspect ${d} --format "{{.Name}}: {{(index .IPAM.Config 0).Gateway}} / {{(index .IPAM.Config 0).Subnet}}"; done'
